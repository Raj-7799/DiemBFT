# -*- generated by 1.0.14 -*-
import da
PatternExpr_213 = da.pat.TuplePattern([da.pat.ConstantPattern('Yo bro')])
PatternExpr_218 = da.pat.BoundPattern('_BoundPattern222_')
_config_object = {}

class Client(da.DistProcess):

    def __init__(self, procimpl, props):
        super().__init__(procimpl, props)
        self._events.extend([da.pat.EventPattern(da.pat.ReceivedEvent, '_ClientReceivedEvent_0', PatternExpr_213, sources=[PatternExpr_218], destinations=None, timestamps=None, record_history=None, handlers=[self._Client_handler_212])])

    def setup(self, clientID, requests, clientTimeout, diemReplicas, **rest_232):
        super().setup(clientID=clientID, requests=requests, clientTimeout=clientTimeout, diemReplicas=diemReplicas, **rest_232)
        self._state.clientID = clientID
        self._state.requests = requests
        self._state.clientTimeout = clientTimeout
        self._state.diemReplicas = diemReplicas
        self._state.pID = self._state.clientID
        self._state.nReq = self._state.requests
        self._state.timeout = self._state.clientTimeout
        self._state.diemReplicas = self._state.diemReplicas

    def run(self):
        self.output('Yo running client!!!')
        self.output('Broadcasting messages to replicas')
        self.send(('Yo boiii',), to=self._state.diemReplicas)
        super()._label('_st_label_204', block=False)
        _st_label_204 = 0
        while (_st_label_204 == 0):
            _st_label_204 += 1
            if (self._state.nReq == 0):
                _st_label_204 += 1
            else:
                super()._label('_st_label_204', block=True)
                _st_label_204 -= 1

    def _Client_handler_212(self):
        self.output('Got message from replica ', self._state.nReq)
        self._state.nReq -= 1
    _Client_handler_212._labels = None
    _Client_handler_212._notlabels = None
